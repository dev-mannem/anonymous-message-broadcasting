 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.scsu.anonymous;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Swathi
 */
public class CreateMeeting extends javax.swing.JFrame {
    
    public static List<String> list = new ArrayList<String>();
    public MeetingModel meetingModel = new MeetingModel();
    SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
    SimpleDateFormat dateTime = new SimpleDateFormat("MM/dd/yyyy HH:mm");
    /** Creates new form NewJFrame */
    public CreateMeeting() {
        initComponents();
        this.setTitle("Create Meeting");
        fillEmployeesTable();
        fillManagersTable();
    }

    
    private void fillEmployeesTable(){
        
        DefaultTableModel e = (DefaultTableModel) EmployeesTable.getModel();
        DbConnection dbConnection = new DbConnection();
        Connection con;
        Statement stmt = null;
        ResultSet rs = null;
        String fname;
        String lname;
        String name;
        String email;
        try{
            String query = "select FirstName,LastName,Email from newuser where Designation = 'Employee' ";
            con = dbConnection.createNewConnection();
            stmt = con.createStatement();
			rs= stmt.executeQuery(query);
			while(rs.next())
			{
                            fname = rs.getString("FirstName");
                            lname = rs.getString("LastName");
                            email = rs.getString("Email");
                            name = lname+","+fname;
                            e.addRow(new Object[] {false,name,email});
                            
                        }
                        
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null,ex);
        }
        finally{
            try{
                rs.close();
                stmt.close();
            }
            catch(Exception exc){
                
            }
        }
    }
    
    private void fillManagersTable(){
        
        DefaultTableModel m = (DefaultTableModel) ManagersTable.getModel();
        DbConnection dbConnection = new DbConnection();
        Connection con;
        Statement stmt = null;
        ResultSet rs = null;
        String fname;
        String lname;
        String name;
        String email;
        try{
            String query = "select FirstName,LastName,Email from newuser where Designation = 'Manager' ";
            con = dbConnection.createNewConnection();
            stmt = con.createStatement();
			rs= stmt.executeQuery(query);
			while(rs.next())
			{
                            fname = rs.getString("FirstName");
                            lname = rs.getString("LastName");
                            email = rs.getString("Email");
                            name = lname+","+fname;
                            m.addRow(new Object[] {false,name,email});
                            
                        }
                        
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null,ex);
        }
        finally{
            try{
                rs.close();
                stmt.close();
            }
            catch(Exception exc){
                
            }
        }
    }


    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCalendar1 = new com.toedter.calendar.JCalendar();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ManagersTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        EmployeesTable = new javax.swing.JTable();
        DoneBtn = new javax.swing.JButton();
        ResetBtn = new javax.swing.JButton();
        ManagersLabel = new javax.swing.JLabel();
        EmployeesLabel = new javax.swing.JLabel();
        GenerateBtn = new javax.swing.JButton();
        PasswordLabel = new javax.swing.JLabel();
        meetingNumber = new javax.swing.JLabel();
        PasswordField = new javax.swing.JPasswordField();
        MeetingNumber = new javax.swing.JTextField();
        CreateMeetingBtn = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        dateChooser = new com.toedter.calendar.JDateChooser();
        timeChooser = new javax.swing.JComboBox<>();
        LogoutBtn = new javax.swing.JButton();
        HomeBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ManagersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Select", "Name", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ManagersTable);
        if (ManagersTable.getColumnModel().getColumnCount() > 0) {
            ManagersTable.getColumnModel().getColumn(0).setResizable(false);
            ManagersTable.getColumnModel().getColumn(0).setPreferredWidth(1);
        }

        EmployeesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Select", "Name", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(EmployeesTable);
        if (EmployeesTable.getColumnModel().getColumnCount() > 0) {
            EmployeesTable.getColumnModel().getColumn(0).setResizable(false);
            EmployeesTable.getColumnModel().getColumn(0).setPreferredWidth(1);
        }

        DoneBtn.setText("Done Selecting..");
        DoneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoneBtnActionPerformed(evt);
            }
        });

        ResetBtn.setText("Reset");
        ResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetBtnActionPerformed(evt);
            }
        });

        ManagersLabel.setText("Manager's List");

        EmployeesLabel.setText("Employee's List");

        GenerateBtn.setText("Generate Meeting #");
        GenerateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateBtnActionPerformed(evt);
            }
        });

        PasswordLabel.setText("Meeting Password");

        meetingNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        meetingNumber.setText("Meeting #");

        MeetingNumber.setEditable(false);
        MeetingNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MeetingNumberActionPerformed(evt);
            }
        });

        CreateMeetingBtn.setText("Create Meeting");
        CreateMeetingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateMeetingBtnActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Choose Date and Time");

        timeChooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HH:MM", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(106, 106, 106)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(DoneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(ResetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ManagersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(62, 62, 62)
                                        .addComponent(PasswordLabel)
                                        .addGap(39, 39, 39))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel1)
                                        .addGap(31, 31, 31)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(CreateMeetingBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(PasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(meetingNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(39, 39, 39)
                                        .addComponent(MeetingNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(209, 209, 209)
                                        .addComponent(GenerateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(18, 18, 18)
                        .addComponent(timeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(EmployeesLabel))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MeetingNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(meetingNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(GenerateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PasswordLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PasswordField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addComponent(CreateMeetingBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(EmployeesLabel)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ManagersLabel)
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ResetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DoneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(71, Short.MAX_VALUE))))
        );

        LogoutBtn.setText("Logout");
        LogoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutBtnActionPerformed(evt);
            }
        });

        HomeBtn.setText("Home");
        HomeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(HomeBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LogoutBtn)
                .addGap(287, 287, 287))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LogoutBtn)
                    .addComponent(HomeBtn))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LogoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutBtnActionPerformed
        // TODO add your handling code here:
        Authentication.UserName.setText("");
        Authentication.Name.setText("");
        Authentication.Designation.setText("");
        dispose();
        new Start().setVisible(true);
    }//GEN-LAST:event_LogoutBtnActionPerformed

    private void HomeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeBtnActionPerformed
        // TODO add your handling code here:
        dispose();
        new ManagerHome().setVisible(true);
    }//GEN-LAST:event_HomeBtnActionPerformed

    private void CreateMeetingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateMeetingBtnActionPerformed
        // TODO add your handling code here:
        String meetingNumber;
        Date date1 = null;
        meetingNumber = MeetingNumber.getText();
        String pwd = String.valueOf(PasswordField.getPassword());        
        String date = dateFormat.format(dateChooser.getDate());
        String time = timeChooser.getSelectedItem().toString();
        String time_Stamp = date +" "+time;
        Timestamp timestamp = null;
        try {
            date1 = dateTime.parse(time_Stamp);
            timestamp = new Timestamp(date1.getTime());
            System.out.println("converted timestamp SWQL: "+timestamp);
            
        } catch (ParseException ex) {
            Logger.getLogger(CreateMeeting.class.getName()).log(Level.SEVERE, null, ex);
        }

String result = meetingModel.createMeeting(meetingNumber,pwd,timestamp);
        if(result.equalsIgnoreCase("SUCCESS")){
            String resp = meetingModel.addParticipants(meetingNumber,list);
            if(resp.equalsIgnoreCase("SUCCESS")){
                JOptionPane.showMessageDialog(jPanel1,"Meeting Created Successfully..!");
                dispose();
                new MeetingCreated(meetingNumber).setVisible(true);
            } else {
                String s = meetingModel.deleteRows(meetingNumber);
                if(s.equalsIgnoreCase("SUCCESS")){
                    String r = meetingModel.cancelMeeting(meetingNumber);
                    if(r.equalsIgnoreCase("SUCCESS")){
                        dispose();
                        new ManagerHome().setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(jPanel1,"Error cancelling meeting..!");
                        dispose();
                        new ManagerHome().setVisible(true);
                    }
                } else {
                    JOptionPane.showMessageDialog(jPanel1,"Error deleting Rows..!");
                    dispose();
                    new ManagerHome().setVisible(true);
                }
            }
        } else {

            dispose();
            new CreateMeeting().setVisible(true);
        }
    }//GEN-LAST:event_CreateMeetingBtnActionPerformed

    private void MeetingNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MeetingNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MeetingNumberActionPerformed

    private void GenerateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateBtnActionPerformed
        // TODO add your handling code here:
        Random rand = new Random();
        int  n = rand.nextInt(999999) + 100000;
        String s = Integer.toString(n);
        MeetingNumber.setText(s);
        GenerateBtn.setVisible(false);
    }//GEN-LAST:event_GenerateBtnActionPerformed

    private void ResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetBtnActionPerformed
        // TODO add your handling code here:
        dispose();
        new CreateMeeting().setVisible(true);
    }//GEN-LAST:event_ResetBtnActionPerformed

    private void DoneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoneBtnActionPerformed
        // TODO add your handling code here:
        int rows = EmployeesTable.getRowCount();
        int cols = EmployeesTable.getColumnCount();
        int rows1 = ManagersTable.getRowCount();
        int cols1 = ManagersTable.getColumnCount();
        for(int i=0; i<rows ;i++){
            String s = EmployeesTable.getModel().getValueAt(i,0).toString();
            if(s.equalsIgnoreCase("TRUE")){
                list.add(EmployeesTable.getModel().getValueAt(i,2).toString());
            }
        }
        for(int j=0; j<rows1 ;j++){
            String s = ManagersTable.getModel().getValueAt(j,0).toString();
            if(s.equalsIgnoreCase("TRUE")){
                list.add(ManagersTable.getModel().getValueAt(j,2).toString());
            }
        }
        EmployeesTable.disable();
        ManagersTable.disable();
    }//GEN-LAST:event_DoneBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateMeeting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateMeeting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateMeeting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateMeeting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateMeeting().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateMeetingBtn;
    private javax.swing.JButton DoneBtn;
    private javax.swing.JLabel EmployeesLabel;
    private javax.swing.JTable EmployeesTable;
    private javax.swing.JButton GenerateBtn;
    private javax.swing.JButton HomeBtn;
    private javax.swing.JButton LogoutBtn;
    private javax.swing.JLabel ManagersLabel;
    private javax.swing.JTable ManagersTable;
    private javax.swing.JTextField MeetingNumber;
    public static javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JButton ResetBtn;
    private com.toedter.calendar.JDateChooser dateChooser;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel meetingNumber;
    private javax.swing.JComboBox<String> timeChooser;
    // End of variables declaration//GEN-END:variables

}
